{
    parserClass="com.zhangfb95.plugins.mdp.parser.MdpParser"

    extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

    psiClassPrefix="Mdp"
    psiImplClassSuffix="Impl"
    psiPackage="com.zhangfb95.plugins.mdp.psi"
    psiImplPackage="com.zhangfb95.plugins.mdp.psi.impl"

    elementTypeHolderClass="com.zhangfb95.plugins.mdp.psi.MdpTypes"
    elementTypeClass="com.zhangfb95.plugins.mdp.psi.MdpElementType"
    tokenTypeClass="com.zhangfb95.plugins.mdp.psi.MdpTokenType"

    tokens=[
        COMMENT="<!--\".*\"-->"

        TEXT=".*"
        SPACE="\s"
        LEFT_BRACKET="["
        RIGHT_BRACKET="]"
        LEFT_PAREN="("
        RIGHT_PAREN=")"
        SLASH="/"
        POUND="#"
        LEFT_ANGLE="<"
        RIGHT_ANGLE=">"

        LINK_TEXT="regexp:[^[\[\]\(\)]]*"
        LINK_REF="regexp:[^[\[\]\(\)]]*"
        LINK_REF_DIR="regexp:[^[\[\]\(\)]]*"
        LINK_REF_FILE="regexp:[^[\[\]\(\)]]*"
    ]
}

mdpFile ::= item_*

private item_ ::= (inline | atx | CRLF)

inline ::= (TEXT? (inline_link) TEXT?)

inline_link ::= (link_show_text SPACE? link_destination SPACE?)

link_show_text ::= (LEFT_BRACKET LINK_TEXT RIGHT_BRACKET)
link_destination ::= (LEFT_ANGLE? LEFT_PAREN link_ref RIGHT_PAREN RIGHT_ANGLE?)

link_ref ::= (link_ref_prefix LINK_REF_FILE)
link_ref_prefix ::= (LINK_REF_DIR (SLASH)+)*

atx ::= (atx_header SPACE atx_content)
atx_header ::= POUND
atx_content ::= TEXT